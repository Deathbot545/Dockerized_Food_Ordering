name: CI/CD for Food_Ordering_Web

on:
  push:
    paths:
      - 'Food_Ordering_Web/**'
      - 'Food_Ordering_API/**' # Add paths for any dependencies
      - 'Order_API/**'         # Ensures workflow runs if dependencies change
      - 'Restaurant_API/**'
  pull_request:
    paths:
      - 'Food_Ordering_Web/**'
      - 'Food_Ordering_API/**' # Add paths for any dependencies
      - 'Order_API/**'         # Similar for pull requests
      - 'Restaurant_API/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Food_Ordering_Web/Dockerfile
        push: true
        tags: deathbot545/foodorderingweb:latest
        
    - name: Decode SSH Key
      run: |
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY_BASE64 }}" | base64 -d > $HOME/ssh_key.pem
        chmod 600 $HOME/ssh_key.pem

    - name: Deploy to AWS EC2
      run: |
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY_BASE64 }}" | base64 -d > $HOME/ssh_key.pem
        chmod 600 $HOME/ssh_key.pem
        ssh -o StrictHostKeyChecking=no -i $HOME/ssh_key.pem ${{ secrets.WEB_APP_EC2_USERNAME }}@${{ secrets.WEB_APP_EC2_HOST }} << 'EOF'
          docker pull deathbot545/foodorderingweb:latest
          docker stop web-container || true
          docker rm web-container || true
          docker run -d --name web-container -p 80:80 deathbot545/foodorderingweb:latest
        EOF

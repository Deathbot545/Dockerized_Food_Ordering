@{
    ViewData["Title"] = "Home";
}
<script src="https://unpkg.com/html5-qrcode"></script>

<style>
    body {
        font-family: 'Open Sans', sans-serif;
    }

    .jumbotron-custom {
        background-image: url('/Images/background.jpg'); /* Replace with path to your hero image */
        background-size: cover;
        background-position: center;
        color: #f7f3f3;
        padding: 100px 25px; /* Increased padding for more spacing */
        border-radius: 10px; /* Rounded corners for a modern look */
        text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5); /* Text shadow for better readability */
    }

    .qr-scan-button {
        background-color: #007bff;
        color: white;
        border-radius: 30px; /* Rounded button for a modern look */
        padding: 15px 30px; /* Increased padding for a larger button */
        font-size: 1.25em; /* Larger font size */
        transition: background-color 0.3s ease;
    }

        .qr-scan-button:hover {
            background-color: #0056b3; /* Darker blue on hover */
        }

    .shop-register, .customer-register {
        background-color: #4CAF50;
        color: white;
        border-radius: 30px; /* Rounded button for a modern look */
        padding: 10px 20px; /* Increased padding */
        font-size: 1em; /* Larger font size */
        transition: background-color 0.3s ease;
    }

        .shop-register:hover, .customer-register:hover {
            background-color: #45a049; /* Darker green on hover */
        }

    .icon-image {
        width: 100px; /* Adjust as needed */
        height: auto;
        margin-bottom: 20px; /* Space between image and text */
    }

    .qr-scanner-modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    .qr-scanner-modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
        border-radius: 10px; /* Rounded corners for a modern look */
    }

    .close-button {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close-button:hover,
        .close-button:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    .feature-box {
        padding: 40px;
        border-radius: 10px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .feature-box:hover {
            transform: translateY(-10px);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        }

    .feature-title {
        font-size: 1.5em;
        margin-bottom: 20px;
        color: #343a40;
    }

    .feature-description {
        font-size: 1.1em;
        color: #6c757d;
    }

    .modal-body {
        padding: 2rem;
    }

    .modal-header {
        border-bottom: none;
    }

    .modal-title {
        font-size: 1.75em;
        color: #343a40;
    }
</style>
<!-- QR Code Scanner Modal -->
<div class="modal fade" id="qrScannerModal" tabindex="-1" aria-labelledby="qrScannerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="qrScannerModalLabel">QR Code Scanner</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="qr-reader" style="width:100%"></div>
            </div>
        </div>
    </div>
</div>

<div class="p-5 mb-4 jumbotron-custom rounded-3">
    <div class="container-fluid py-5 text-center">
        <h1 class="display-5 fw-bold">Welcome to Restro</h1>
        <p class="fs-4">Your Easy Food Ordering App! Scan the QR code below to place your order.</p>
        <button id="orderButton" class="btn qr-scan-button btn-lg mt-3" type="button">
            Scan QR Code <i class="fas fa-qrcode ml-2"></i>
        </button>
    </div>
</div>

<div class="container">
    <div class="row align-items-stretch">
        <div class="col-md-6 mb-3">
            <div class="feature-box p-5 bg-light border rounded-3 text-center">
                <img src="path-to-customer-icon.png" alt="Customer Icon" class="icon-image"> <!-- Replace with path to customer icon -->
                <h2 class="feature-title">Customer</h2>
                <p class="feature-description">Order food quickly and easily.</p>
                <a href="@Url.Action("Register", "Customer")" class="btn customer-register">Register as Customer</a>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <div class="feature-box p-5 bg-dark text-white rounded-3 text-center">
                <img src="path-to-shop-icon.png" alt="Shop Icon" class="icon-image"> <!-- Replace with path to shop icon -->
                <h2 class="feature-title text-white">Add Your Own Shop</h2>
                <p class="feature-description">Manage your restaurant's orders.</p>
                <a href="@Url.Action("Register", "Shop")" class="btn shop-register">Register as Shop</a>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('orderButton').addEventListener('click', function () {
        // Show the modal
        var myModal = new bootstrap.Modal(document.getElementById('qrScannerModal'));
        myModal.show();

        var config = { fps: 10, qrbox: { width: 250, height: 250 }, rememberLastUsedCamera: true };
        var html5QrcodeScanner = new Html5QrcodeScanner("qr-reader", config, false);
        html5QrcodeScanner.render(onScanSuccess, onScanError);

        // Attempt to modify the button styles after a delay to ensure they've been rendered
        setTimeout(() => {
            // Select the buttons created by the library
            let buttons = document.querySelectorAll('#qr-reader button');
            buttons.forEach(button => {
                // Add Bootstrap button classes
                button.classList.remove('button-class'); // Remove the library's default class if necessary
                button.classList.add('btn', 'btn-primary'); // Add Bootstrap classes

                // Specific class additions based on button functionality, if possible
                if (button.textContent.includes('Start')) {
                    button.classList.add('btn-success'); // Example for a "Start" button
                } else if (button.textContent.includes('Stop')) {
                    button.classList.add('btn-danger'); // Example for a "Stop" button
                }
            });
        }, 1000); // Adjust the delay as needed to ensure the buttons are rendered
    });

    function onScanSuccess(decodedText, decodedResult) {
        // Handle the decoded text
        console.log(`Code matched = ${decodedText}`, decodedResult);
    }

    function onScanError(errorMessage) {
        // Handle scan error
        console.log(`Scan error: ${errorMessage}`);
    }
</script>